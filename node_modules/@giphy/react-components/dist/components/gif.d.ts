import { PingbackAttribute } from '@giphy/js-analytics';
import { IGif, IUser } from '@giphy/js-types';
import React, { ReactType, SyntheticEvent } from 'react';
declare type PingbackContextProps = {
    attributes: PingbackAttribute[];
};
export declare const PingbackContext: React.Context<PingbackContextProps>;
export declare const GRID_COLORS: string[];
export declare const getColor: () => string;
export declare type EventProps = {
    onGifVisible?: (gif: IGif, e?: SyntheticEvent<HTMLElement, Event>) => void;
    onGifSeen?: (gif: IGif, boundingClientRect: ClientRect | DOMRect) => void;
    onGifClick?: (gif: IGif, e: SyntheticEvent<HTMLElement, Event>) => void;
    onGifRightClick?: (gif: IGif, e: SyntheticEvent<HTMLElement, Event>) => void;
};
export declare type GifOverlayProps = {
    gif: IGif;
    isHovered: boolean;
};
declare type GifProps = {
    gif: IGif;
    width: number;
    height?: number;
    backgroundColor?: string;
    className?: string;
    user?: Partial<IUser>;
    overlay?: ReactType<GifOverlayProps>;
    hideAttribution?: boolean;
    noLink?: boolean;
    style?: any;
};
declare type Props = GifProps & EventProps;
declare const Gif: {
    ({ gif, width, height: forcedHeight, onGifRightClick, className, onGifClick, onGifSeen, onGifVisible, user, backgroundColor, overlay, hideAttribution, noLink, style, }: Props): JSX.Element;
    className: string;
    imgClassName: string;
};
export default Gif;
