"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createSession = exports.addLastSearchResponseId = exports.SESSION_STORAGE_KEY = void 0;
var cookie_1 = __importDefault(require("cookie"));
var uuid_1 = require("uuid"); // v1 only for pingback verfication
exports.SESSION_STORAGE_KEY = 'responseIds';
function getLastResponseId() {
    try {
        var sessionIds = sessionStorage.getItem(exports.SESSION_STORAGE_KEY);
        if (sessionIds) {
            var responseIds = JSON.parse(sessionIds) || [];
            return responseIds[responseIds.length - 2] || '';
        }
    }
    catch (_) { }
    return '';
}
function addLastSearchResponseId(responseId) {
    try {
        var existing = sessionStorage.getItem(exports.SESSION_STORAGE_KEY);
        if (existing) {
            var searchResponseIds = JSON.parse(existing);
            if (searchResponseIds[searchResponseIds.length - 1] !== responseId) {
                sessionStorage.setItem(exports.SESSION_STORAGE_KEY, JSON.stringify(__spreadArrays(searchResponseIds, [responseId])));
            }
        }
        else {
            sessionStorage.setItem(exports.SESSION_STORAGE_KEY, JSON.stringify([responseId]));
        }
    }
    catch (_) { }
}
exports.addLastSearchResponseId = addLastSearchResponseId;
var gl = ((typeof window !== 'undefined' ? window : global) || {});
gl.giphyRandomId = '';
var getRandomId = function () {
    // it exists in memory
    if (!gl.giphyRandomId) {
        try {
            // it exists in storage
            gl.giphyRandomId = localStorage.getItem('giphyRandomId');
        }
        catch (_) { }
        if (!gl.giphyRandomId) {
            // we need to create it
            gl.giphyRandomId = uuid_1.v1();
            try {
                // save in storage
                localStorage.setItem('giphyRandomId', gl.giphyRandomId);
            }
            catch (_) { }
        }
    }
    return gl.giphyRandomId;
};
// the session is the request payload of a pingback request
exports.createSession = function (event_type, actions, responseId, loggedInUserId) {
    if (responseId === void 0) { responseId = ''; }
    if (loggedInUserId === void 0) { loggedInUserId = ''; }
    return ({
        user: {
            user_id: cookie_1.default.parse(document ? document.cookie : {}).giphy_pbid,
            logged_in_user_id: loggedInUserId || '',
            random_id: getRandomId(),
        },
        events: [
            {
                event_type: event_type,
                referrer: document ? document.referrer : '',
                actions: actions,
                response_id: responseId,
                prior_response_id: getLastResponseId(),
            },
        ],
    });
};
//# sourceMappingURL=session.js.map